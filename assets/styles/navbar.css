#navbar {
    position: fixed;
    z-index: 9998;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--navbarHeight);
    color: var(--secondaryText);

    display: flex;
    gap: var(--padding);
    align-items: center;

    padding: 0 var(--padding);

    &.scrolled { /* background is added (js) when scrolled */
        background-color: var(--background);
    }
}



#navbar .nav_website_name {
    display: flex;
    align-items: center;
    gap: calc(var(--padding) / 2);
    font-size: var(--textSizeBig);
    color: var(--text);
    text-transform: uppercase;

    @media only screen and (max-width: 767px) {
        gap: var(--padding);
    }

    img {
        height: 22px;

        @media only screen and (min-width: 2000px) {
            height: 32px;
        }
    }
}



#navbar .nav_links {
    display: flex;
    gap: calc(var(--padding) / 2);

    @media only screen and (max-width: 1000px) {
        display: none;
    }

    span {
        cursor: pointer;
    }

    span.active {
        color: var(--text);
    }
}


#language_toggle {
    display: flex;
    align-items: center;
    margin-left: auto; /* stick to the right */
    gap: 8px;
    color: var(--secondaryText);
    font-size: var(--textSizeSmall);

    @media only screen and (max-width: 1000px) {
        display: none;
    }

    p {
        cursor: pointer;
    }

    .language_indicator {
        display: flex;
        height: 2px;
        width: 40px;
        background: var(--lightBackground);
        overflow: hidden;

        .active {
            height: 2px;
            width: 20px;
            background: var(--secondaryText);
            transition: transform .5s cubic-bezier(.63,-0.43,.3,1);
        }
    }

    &:has(.language_fr:hover) .active {
        transform: translate(100%);
    }
 
}



#navbar .nav_contactme {
    position: relative;
    padding: 10px 20px;
    border: 1px solid var(--secondaryText);
    font-size: var(--textSizeSmall);
    display: flex;
    align-items: center;
    overflow: hidden;
    min-width: min-content;

    @media only screen and (max-width: 1000px) {
        display: none;
    }

    .background {
        position: absolute;
        right: 100%;
        background: var(--text);
        height: 100%;
        aspect-ratio: 1;
        border-radius: 50%;

        transition: height, right;
        transition-duration: .5s;
    }

    p {
        color: var(--text);
        margin: 0;
        mix-blend-mode: difference;
    }

    &:hover {
        .background {
            height: 800%;
            right: -5%;
        }
    }

}
 


#hamburger_menu {
    --boxSize: 30px;
    --padding: calc(0.0 * var(--boxSize));
    width: var(--boxSize);
    aspect-ratio: 1;
    overflow: hidden;
    margin-left: auto; /* stick to the right */

    @media only screen and (min-width: 1001px) {
        display: none;
    }

    .container {
        position: relative;
        height: 100%;
        transition: transform 1s;
    }

    .line {
        position: absolute;
        width: calc(100% - 2 * var(--padding));
        height: calc(0.05 * var(--boxSize));
        background-color: var(--secondaryText);
    }

    .upper {
        left: 50%;
        top: 50%;
        transform-origin: center;
            transform: translate(
        -50%, 
        calc(-50% - (var(--boxSize) * 0.1))
        );
        transition: transform 1s, top 1s, left 1s, width 1s;
    }

    .lower {
        left: 50%;
        top: 50%;
        transform-origin: center;
        transform: translate(
        -50%, 
        calc(-50% + (var(--boxSize) * 0.1))
        );
        transition: transform 1s, bottom 1s, left 1s, width 1s;
    }

    &.opened .upper {
        transform: translate(-50%, -50%) rotate(45deg);
        width: calc(var(--boxSize) * 0.8);
    }

    &.opened .lower {
        transform: translate(-50%, -50%) rotate(-45deg);
        width: calc(var(--boxSize) * 0.8);
    }
}

#mobile_menu {
    position: fixed;
    top: 0;
    right: 0;
    transform: translateX(100%);
    width: 100%;
    height: 100vh;
    z-index: 9997;
    background-color: var(--background);
    transition: transform 0.5s;

    @media only screen and (max-width: 1000px) {
        &.opened {
            transform: translateX(0%);
        }
    }
    
}